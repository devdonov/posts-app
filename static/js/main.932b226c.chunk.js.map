{"version":3,"sources":["shared/components/Loader/Loader.tsx","shared/utils.fn.ts","pages/Home/PostRow.tsx","pages/Home/PostsTable.tsx","shared/api.ts","pages/Home/Home.tsx","pages/Home/usePostsFetch.ts","pages/Post/Post.tsx","pages/Post/usePostFetch.ts","App.tsx","index.tsx"],"names":["Loader","loaded","animationClass","className","getAnimDelayStyle","time","offset","animationDelay","PostRow","data","index","history","useHistory","style","onClick","push","id","userId","title","Header","PostsTable","map","row","key","BASE","getUserById","fetch","then","r","json","getPostById","Home","props","useState","isLoading","setLoading","posts","setPosts","error","setError","useReducer","reloadTrigger","reloadPosts","useEffect","a","usePostsFetch","Post","post","setPost","user","setUser","reload","usePostFetch","match","params","href","website","name","body","to","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.932b226c.chunk.js","sourcesContent":["import React from 'react'\nimport './loader.style.css'\n\ninterface Props {\n  loaded?: boolean\n}\n\n// const ANIM_CLASSES = {\n//   true: \"loader--slide-80\",\n//   false: \"loader--slide-100\"\n// }\n\nconst Loader = ({ loaded = false }: Props) => {\n  const animationClass = loaded ? \"loader--slide-100\" : \"loader--slide-80\";\n  return (\n    <div className={`loader ${animationClass}`} />\n  )\n}\n\nexport default Loader\n","import { CSSProperties } from \"react\";\n\nexport function getAnimDelayStyle(time: number, offset=25): CSSProperties {\n  return { animationDelay: `${time * offset}ms` }\n}","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Post } from '../../shared/types';\nimport { getAnimDelayStyle } from '../../shared/utils.fn';\n\ninterface Props {\n  data: Post,\n  index: number\n}\n\nconst PostRow = ({ data, index }: Props) => {\n  const history = useHistory();\n  \n  return (  \n    <tr\n      className=\"post-table__row fade-up\"\n      style={getAnimDelayStyle(index, 10)}\n      onClick={() => history.push(`/${data.id}`)}\n    >\n      <td>{ data.id }</td>\n      <td>{ data.userId }</td>\n      <td>{ data.title }</td>\n    </tr>\n  )\n}\n\nexport default PostRow\n","import React from 'react'\nimport { Post } from '../../shared/types'\nimport PostRow from './PostRow'\nimport './post-table.style.css'\n\ninterface Props {\n  data: Post[]\n}\n\nfunction Header() {\n  return (\n    <thead className=\"post-table__header fade-up\">\n      <tr>\n        <th>Post ID</th>\n        <th>User ID</th>\n        <th>Title</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst PostsTable = ({ data }: Props) => {\n  return (\n    <table className=\"post-table\">\n      <Header />\n      <tbody>\n        { data.map((row, index) => <PostRow index={index} key={row.id} data={row} />) }\n      </tbody>\n    </table>\n  )\n}\n\nexport default PostsTable\n","import { Post, User } from \"./types\";\n\nconst BASE = \"https://jsonplaceholder.typicode.com\";\n// export const POSTS = `${BASE}/posts`;\n// export const USERS = `${BASE}/users`;\n\nexport function getUserById(id: number | string): Promise<User> {\n  return fetch(`${BASE}/users/${id}`)\n    .then(r =>\n      r.json(),\n    );\n}\n\nexport function getPosts(): Promise<Post[]> {\n  return fetch(`${BASE}/posts`)\n    .then(r =>\n      r.json(),\n    );\n}\n\nexport function getPostById(id: string): Promise<Post> {\n  return fetch(`${BASE}/posts/${id}`)\n    .then(r =>\n      r.json(),\n    );\n}","import React from 'react'\nimport { Loader } from '../../shared/components';\nimport PostsTable from './PostsTable';\nimport { usePostsFetch } from './usePostsFetch';\n\ninterface Props {}\n\nconst Home = (props: Props) => {\n  // TODO: handle error\n  const {isLoading, posts} = usePostsFetch();\n  const loaded = !isLoading;\n\n  return (\n    <>\n      <Loader loaded={loaded} />\n\n      {loaded && <div className=\"section\">\n        <h1 className=\"title title__main title--upper fade-left\">POSTS:</h1>\n        <PostsTable data={posts} />\n      </div>}\n    </>\n  )\n}\n\nexport default Home;\n","import {useState, useReducer, useEffect} from 'react';\nimport { getPosts } from '../../shared/api';\nimport { Post } from '../../shared/types';\n\nexport function usePostsFetch() {\n  // TODO: implement pagination if needed\n  const [isLoading, setLoading] = useState(false);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [error, setError] = useState(null);\n  const [reloadTrigger, reloadPosts] = useReducer(() => ({}), {});\n  useEffect(\n    () => {\n      (async () => {\n        setLoading(true);\n        setPosts([]);\n        try {\n          setPosts(await getPosts());\n        } catch (_error) {\n          setError(_error)\n        } finally {\n          setLoading(false);\n        }\n      })();\n    },\n    [reloadTrigger],\n  );\n\n  return { isLoading, posts, reloadPosts, error };\n}\n","import React from 'react'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport { usePostFetch } from './usePostFetch'\nimport './post.style.css'\nimport { getAnimDelayStyle } from '../../shared/utils.fn'\nimport { Loader } from '../../shared/components'\n\nconst Post = (props: RouteComponentProps<{ id: string }>) => {\n  // TODO: handle error\n  const { user, post, isLoading } = usePostFetch(props.match.params.id);\n  const loaded = !isLoading;\n\n  return (\n    <>\n      <Loader loaded={loaded} />\n      \n      {loaded && <div className=\"section post\">\n        <article className=\"post__content\">\n          <h1 style={getAnimDelayStyle(1, 150)} className=\"title title--upper text--center fade-up post__title\">\n            { post?.title }\n          </h1>\n          <div style={getAnimDelayStyle(6, 150)} className=\"fade-in\">\n            <div>\n              <span><b>By:</b> <a href={user?.website}>{ user?.name }</a></span>\n            </div>\n            <p className=\"post__text\">\n              { post?.body }\n            </p>\n          </div>\n        </article>\n        <footer className=\"post__footer\">\n          <Link to=\"/\">\n            Back to Posts\n          </Link>\n        </footer>\n      </div>}\n    </>\n  )\n}\n\nexport default Post\n","import { useState, useReducer, useEffect } from 'react';\nimport { getPostById, getUserById } from '../../shared/api';\nimport { Post, User } from '../../shared/types';\n\nexport function usePostFetch(id: string) {\n  const [isLoading, setLoading] = useState(false);\n  const [post, setPost] = useState<Post | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState(null);\n  const [reloadTrigger, reload] = useReducer(() => ({}), {});\n  useEffect(\n    () => {\n      (async () => {\n        setLoading(true);\n        setUser(null);\n        try {\n          const post = await getPostById(id)\n          setPost(post)\n          setUser(await getUserById(post.userId));\n        } catch (_error) {\n          setError(_error)\n        } finally {\n          setLoading(false);\n        }\n      })();\n    },\n    [reloadTrigger, id],\n  );\n\n  return { isLoading, post, user, reload, error };\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route, Switch\n} from \"react-router-dom\";\nimport { Home, Post } from './pages';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:id\" component={Post} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}